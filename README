# üå± SpringBoot Demo API

Proyecto de API REST modular y escalable desarrollado con Java moderno y Spring Boot, pensado como portafolio para demostrar buenas pr√°cticas en backend profesional.

üîπ Tecnolog√≠as y herramientas

Lenguaje: Java 21

Framework: Spring Boot 3.x

Persistencia: Spring Data JPA + Hibernate

Base de datos: PostgreSQL / MySQL (con Docker)

Seguridad: Spring Security, roles y contrase√±as cifradas con BCrypt

Testing: JUnit 5, Mockito, tests unitarios e integraci√≥n

Documentaci√≥n: SpringDoc / Swagger UI

Observabilidad: Spring Boot Actuator

Gesti√≥n de configuraci√≥n: application.yml con perfiles dev / prod

üîπ Arquitectura

La API sigue una arquitectura en capas:

Cliente (Front / Postman / otra API)
        ‚Üì
Controlador (Controller)
        ‚Üì
Servicio (Service)
        ‚Üì
Repositorio (Repository)
        ‚Üì
Base de datos (PostgreSQL / MySQL)


Extras / Cross-cutting concerns:

Validaciones con Bean Validation (@Valid)

Manejo global de excepciones

Configuraci√≥n por perfiles (dev / prod)

Observabilidad: m√©tricas, logs, health checks

Seguridad: roles y hashing de contrase√±as

(Aqu√≠ puedes agregar un diagrama visual de la arquitectura)

üîπ Funcionalidades implementadas

Endpoints REST seguros y documentados con Swagger UI

Validaci√≥n de datos de entrada

Testing unitario y de integraci√≥n entre capas

Configuraci√≥n modular y escalable

Observabilidad con Actuator y logs b√°sicos

üîπ Pr√≥ximos pasos / roadmap

Implementar JWT para autenticaci√≥n y autorizaci√≥n avanzada

Migrar a arquitectura de microservicios

Mejorar despliegue en cloud y escalabilidad

Logging avanzado, m√©tricas enriquecidas y tracing distribuido

üîπ C√≥mo ejecutar el proyecto

Clonar el repositorio:

git clone https://github.com/CSamuelRod/modern-springboot-api.git


Configurar base de datos (PostgreSQL o MySQL) y perfiles dev / prod en application.yml

Ejecutar con Maven:

./mvnw spring-boot:run


Acceder a la documentaci√≥n Swagger:

http://localhost:8080/swagger-ui.html

üîπ Contribuciones

Este proyecto es personal, pero cualquier feedback o sugerencia es bienvenida para mejorar las buenas pr√°cticas en backend con Spring Boot.
